"use strict";(self.webpackChunkauto_infra=self.webpackChunkauto_infra||[]).push([[901],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=u(r),d=a,y=g["".concat(l,".").concat(d)]||g[d]||c[d]||s;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[g]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5873:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/2-b379e492d49afd570ec1883fda5cb051.png"},6340:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const s={slug:"RestAssuredAllure",title:"Advanced RestAssured Logging in Allure Report",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},i=void 0,o={unversionedId:"Articles/2019-06-06-RestAssured_AllureLogging",id:"Articles/2019-06-06-RestAssured_AllureLogging",isDocsHomePage:!1,title:"Advanced RestAssured Logging in Allure Report",description:"image",source:"@site/docs/Articles/2019-06-06-RestAssured_AllureLogging.mdx",sourceDirName:"Articles",slug:"/Articles/RestAssuredAllure",permalink:"/docs/Articles/RestAssuredAllure",version:"current",frontMatter:{slug:"RestAssuredAllure",title:"Advanced RestAssured Logging in Allure Report",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},sidebar:"tutorialSidebar",previous:{title:"Send Your Test Results to Microsoft Teams using AdaptiveCards.io",permalink:"/docs/Articles/MicrosoftTeams"},next:{title:"Advanced RestAssured Logging in Extent Report",permalink:"/docs/Articles/RestAssuredExtent"}},l=[{value:"Explanation of above code:",id:"explanation-of-above-code",children:[]}],u={toc:l},p="wrapper";function g(e){let{components:t,...s}=e;return(0,a.yg)(p,(0,n.A)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:r(9626).A})),(0,a.yg)("p",null,"Goal: Record API Request and Response using RestAssured Logging with Minimal Coding, By Decreasing the Boiler Plate code for Reporting Purposes.\nLibraries in Use:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"RestAssured"),(0,a.yg)("li",{parentName:"ol"},"AllureReports"),(0,a.yg)("li",{parentName:"ol"},"TestNG")),(0,a.yg)("p",null,"Step1: Create a TestNG Listener Class as Below."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'\npublic class AllureListener implements ITestListener, IInvokedMethodListener,IInvokedMethodListener {\n    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n\n    @SneakyThrows\n    @Override\n    public void afterInvocation(IInvokedMethod method, ITestResult testResult) {\n        IInvokedMethodListener.super.afterInvocation(method, testResult);\n          logRequest(request);\n        logResponse(response);\n    }\n\n    @Attachment(value = "request", type = "text/plain")\n    public byte[] logRequest(final ByteArrayOutputStream stream) {\n        return attach(stream);\n    }\n\n    @Attachment(value = "response", type = "text/plain")\n    public byte[] logResponse(final ByteArrayOutputStream stream) {\n        return attach(stream);\n    }\n\n    public byte[] attach(final ByteArrayOutputStream log) {\n        final byte[] array=log.toByteArray();\n        log.reset();\n        return array;\n    }\n\n    @Override\n    public void onStart(ISuite suite) {\n        ISuiteListener.super.onStart(suite);\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL, requestVar), new ResponseLoggingFilter(LogDetail.ALL, responseVar));\n    }\n\n    @Override\n    public void onFinish(ISuite suite) {\n        ISuiteListener.super.onFinish(suite);\n        RestAssured.reset();\n    }\n\n}\n\n')),(0,a.yg)("h3",{id:"explanation-of-above-code"},"Explanation of above code:"),(0,a.yg)("p",null,"From the above TestNG Listener class we are initializing two types of Variables."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"ByteArrayOutPutStream"),(0,a.yg)("li",{parentName:"ol"},"PrintArrayStream")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n")),(0,a.yg)("p",null,"After the Variables declaration I am adding request and response methods for allure to send the Logs with annotation @Attachment"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'@Attachment(value = "request", type = "text/plain")\n    public byte[] logRequest(final ByteArrayOutputStream stream) {\n        return attach(stream);\n    }\n\n    @Attachment(value = "response", type = "text/plain")\n    public byte[] logResponse(final ByteArrayOutputStream stream) {\n        return attach(stream);\n    }\n\n')),(0,a.yg)("p",null,"And in OnStart Method from ItestSuite we are defining the RestAssured LoggingLevel. by Using RestAssured.Filters and RequestLoggingFiler"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public void onStart(ISuite suite) {\n        ISuiteListener.super.onStart(suite);\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL, requestVar), new ResponseLoggingFilter(LogDetail.ALL, responseVar));\n    }\n")),(0,a.yg)("p",null,"After OnStart the execution will go to AfterInvoke method, this is where the Logs get pushed to Allure."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"public void afterInvocation(IInvokedMethod method, ITestResult testResult) {\n        IInvokedMethodListener.super.afterInvocation(method, testResult);\n          logRequest(request);\n        logResponse(response);\n    }\n")),(0,a.yg)("p",null,"At the end of Test Suite we are Resetting the RestAssured as RestAssured.reset() to avoid duplicate logging."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"@Override\n    public void onFinish(ISuite suite) {\n        ISuiteListener.super.onFinish(suite);\n        RestAssured.reset();\n    }\n")),(0,a.yg)("p",null,"Thats it, Add the Above Listener to your TestNG xml and check the Report. Your Report will look like below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:r(5873).A})),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:r(7480).A})),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:r(7095).A})))}g.isMDXComponent=!0},7095:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/4-4e88bb37cacf4269d22d0a99966c68aa.png"},7480:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/3-09f5d68fa025328742be4c9c52033739.png"},9626:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/1-89666522aa7e94818fc6d8e8c2590b1b.png"}}]);