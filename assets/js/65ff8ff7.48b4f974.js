"use strict";(self.webpackChunkauto_infra=self.webpackChunkauto_infra||[]).push([[523],{291:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const s={slug:"RestAssuredExtent",title:"Advanced RestAssured Logging in Extent Report",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},o=void 0,i={unversionedId:"Articles/2019-06-06-RestAssured_ExtentLogging",id:"Articles/2019-06-06-RestAssured_ExtentLogging",isDocsHomePage:!1,title:"Advanced RestAssured Logging in Extent Report",description:"image",source:"@site/docs/Articles/2019-06-06-RestAssured_ExtentLogging.mdx",sourceDirName:"Articles",slug:"/Articles/RestAssuredExtent",permalink:"/docs/Articles/RestAssuredExtent",version:"current",frontMatter:{slug:"RestAssuredExtent",title:"Advanced RestAssured Logging in Extent Report",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},sidebar:"tutorialSidebar",previous:{title:"Advanced RestAssured Logging in Allure Report",permalink:"/docs/Articles/RestAssuredAllure"},next:{title:"Deploy Reportportal on Azure Kubernetes Cluster",permalink:"/docs/Articles/ReportPortalKubernetes"}},l=[{value:"Explanation of above code:",id:"explanation-of-above-code",children:[]}],u={toc:l},p="wrapper";function g(e){let{components:t,...s}=e;return(0,a.yg)(p,(0,r.A)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:n(3535).A})),(0,a.yg)("p",null,"Goal: Record API Request and Response using RestAssured Logging with Minimal Coding, By Decreasing the Boiler Plate code for Reporting Purposes.\nLibraries in Use:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"RestAssured"),(0,a.yg)("li",{parentName:"ol"},"ExtentReports"),(0,a.yg)("li",{parentName:"ol"},"TestNG")),(0,a.yg)("p",null,"Step1: Create a ExtentReport Class for ExtentSparkReporter class initialization."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-Java"},'public class ExtentReporterCls {\n    static ExtentReports extent;\n\n    public static ExtentReports ReportGenerator()\n    {\n        Date d = new Date();\n        SimpleDateFormat SDF = new SimpleDateFormat("yyyy-MMM-dd_HH_mm");\n\n        String path = System.getProperty("user.dir")+"\\\\HtmlReports\\\\Extent\\\\"+"ExtentReport.html";\n\n        ExtentSparkReporter ESR = new ExtentSparkReporter(path).viewConfigurer()\n                .viewOrder()\n                .as(new ViewName[] { ViewName.DASHBOARD, ViewName.TEST, ViewName.EXCEPTION,ViewName.LOG  })\n                .apply();\n        ESR.config().setReportName("Test Automation Results");\n       // ESR.config().setDocumentTitle("Test Results");\n        extent = new ExtentReports();\n        extent.attachReporter(ESR);\n        extent.setSystemInfo("Tester",System.getProperty("user.name"));\n        return extent;\n\n    }\n\n}\n')),(0,a.yg)("p",null,"Step2: Create a TestNG Listener Class as Below."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-Java"},'public class ExtentListener implements ITestListener, ISuiteListener,IInvokedMethodListener {\n    ExtentReports extent = ExtentReporterCls.ReportGenerator();\n    ExtentTest test;\n    ExtentTest node;\n    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n\n    private static final ThreadLocal<ExtentTest> LocalThread = new ThreadLocal<ExtentTest>();\n\n    public void logInfo(String message)\n    {\n        LocalThread.get().info(message);\n    }\n\n    public void logJsoninfo(String json)\n    {\n        LocalThread.get().info(MarkupHelper.createCodeBlock(json, CodeLanguage.JSON));\n    }\n\n    public void logReqAndResponse(String json1,String json2)\n    {\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{json1, json2}));\n    }\n\n    @Override\n    public void onTestStart(ITestResult result) {\n        node = test.createNode(result.getMethod().getMethodName());\n        LocalThread.set(node);\n    }\n\n    @Override\n    public void onTestSuccess(ITestResult result) {\n        LocalThread.get().log(Status.PASS,"------------TEST CASE PASSED------------");\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{request.toString().trim(),response.toString().trim()}));\n    }\n\n    @Override\n    public void onTestFailure(ITestResult result) {\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{request.toString().trim(), response.toString().trim()}));\n        LocalThread.get().fail(result.getThrowable());\n    }\n\n    @Override\n    public void onTestSkipped(ITestResult result) {\n        LocalThread.get().log(Status.INFO,"------------TEST CASE SKIPPED------------");\n        LocalThread.get().skip(result.getThrowable());\n\n    }\n\n    @Override\n    public void onStart(ISuite suite) {\n        ISuiteListener.super.onStart(suite);\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL, requestVar), new ResponseLoggingFilter(LogDetail.ALL, responseVar));\n    }\n\n    @Override\n    public void onFinish(ISuite suite) {\n        ISuiteListener.super.onFinish(suite);\n        RestAssured.reset();\n    }\n\n    @SneakyThrows\n    @Override\n    public void onFinish(ITestContext context) {\n        extent.flush();\n    }\n}\n')),(0,a.yg)("h3",{id:"explanation-of-above-code"},"Explanation of above code:"),(0,a.yg)("p",null,"From the above TestNG Listener class we are initializing two types of Variables."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"ByteArrayOutPutStream"),(0,a.yg)("li",{parentName:"ol"},"PrintArrayStream")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-Java"},"    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n")),(0,a.yg)("p",null,"And in OnStart Method we are defining the RestAssured LoggingLevel. by Using RestAssured.Filters and RequestLoggingFiler"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-Java"}," public void onStart(ITestContext context) {\n\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL,requestVar),new ResponseLoggingFilter(LogDetail.ALL,responseVar));\n        test= extent.createTest(context.getName());\n    }\n\n")),(0,a.yg)("p",null,"At the end of Test Suite we are Resetting the RestAssured as RestAssured.reset() to avoid duplicate logging."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},"@Override\n    public void onFinish(ISuite suite) {\n        ISuiteListener.super.onFinish(suite);\n        RestAssured.reset();\n    }\n")),(0,a.yg)("p",null,"Add the Above Listener to your TestNG xml and check the Report. Your Report will look like below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:n(3620).A})),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:n(6125).A})),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"image",src:n(4562).A})))}g.isMDXComponent=!0},3535:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/1-3a0fedf67ea3b974f5d2b77daf589a31.png"},3620:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/2-9eff194188b171cfe8710b7eba026ec6.png"},4562:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/4-2259ca28f46a3ac761f06718b3f70f81.png"},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=u(n),d=a,m=g["".concat(l,".").concat(d)]||g[d]||c[d]||s;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[g]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6125:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/3-e87199719fa5b4eabb441032e18230b9.png"}}]);