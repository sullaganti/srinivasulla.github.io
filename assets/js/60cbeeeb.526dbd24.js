"use strict";(self.webpackChunkauto_infra=self.webpackChunkauto_infra||[]).push([[513],{1239:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/4-3a193e978674caea73495f4190ebec5e.png"},1624:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/3-bfae8b1514160469a400ffb3af700d5b.png"},3665:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/2-e11232885f036d29490d270012577c09.png"},3770:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/1-fd82aae80b4bf55b80d96917a7ace4bd.png"},5454:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/5-e11232885f036d29490d270012577c09.png"},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var i=n(6540);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=i.createContext({}),m=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=m(e.components);return i.createElement(o.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=m(n),d=s,g=p["".concat(o,".").concat(d)]||p[d]||c[d]||a;return n?i.createElement(g,r(r({ref:t},u),{},{components:n})):i.createElement(g,r({ref:t},u))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,r=new Array(a);r[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:s,r[1]=l;for(var m=2;m<a;m++)r[m]=n[m];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6395:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=n(8168),s=(n(6540),n(5680));const a={slug:"MicrosoftTeams",title:"Send Your Test Results to Microsoft Teams using AdaptiveCards.io",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},r=void 0,l={unversionedId:"Articles/2019-06-05-MSTeams",id:"Articles/2019-06-05-MSTeams",isDocsHomePage:!1,title:"Send Your Test Results to Microsoft Teams using AdaptiveCards.io",description:"image",source:"@site/docs/Articles/2019-06-05-MSTeams.mdx",sourceDirName:"Articles",slug:"/Articles/MicrosoftTeams",permalink:"/docs/Articles/MicrosoftTeams",version:"current",frontMatter:{slug:"MicrosoftTeams",title:"Send Your Test Results to Microsoft Teams using AdaptiveCards.io",author:"Srinivasulu Ullaganti",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},sidebar:"tutorialSidebar",previous:{title:"SetUp your own On-Premise Source Code Management tools.",permalink:"/docs/Articles/SCM"},next:{title:"Advanced RestAssured Logging in Allure Report",permalink:"/docs/Articles/RestAssuredAllure"}},o=[],m={toc:o},u="wrapper";function p(e){let{components:t,...a}=e;return(0,s.yg)(u,(0,i.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,(0,s.yg)("img",{alt:"image",src:n(3770).A})),(0,s.yg)("p",null,"Hello Everyone,"),(0,s.yg)("p",null,"In this article lets see how to Send Test Results to Microsoft Teams Like Below\n",(0,s.yg)("img",{alt:"image",src:n(3665).A})),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"Pre Requisites"),":"),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},"Microsoft Teams WebHook"),(0,s.yg)("li",{parentName:"ol"},"AdaptiveCards.io knowledge (basic drag and drop)"),(0,s.yg)("li",{parentName:"ol"},"Selenium / RestAssured Framework with TestNG"),(0,s.yg)("li",{parentName:"ol"},"RestAssured Dependency"),(0,s.yg)("li",{parentName:"ol"},"Intellij Idea (for Lombok Plugin)")),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"Step1"),": Create a WebHook for Microsoft Teams. "),(0,s.yg)("p",null,"Follow this article and Create a Hook, it is very easy to create one."),(0,s.yg)("p",null,"At Step no.5 from Above article you will get a RestAPI Endoint which will look like below. Keep this Endpoint URL for Posting the Results."),(0,s.yg)("p",null,(0,s.yg)("img",{alt:"image",src:n(1624).A})),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"Step2"),": Select a Design from adaptivecards"),(0,s.yg)("p",null,"Adaptive Cards are an open card exchange format enabling developers to exchange UI content in a common and consistent way. We can choose the Design as per requirements and start updating it.'\nTo send Data to WebHooks we need a JSON Payload. Below is the basic Format of Request Body."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},'{\n\n\u202f\u202f\u202f\u202f\u202f\u202f"type":\u202f"message", \n\n\u202f\u202f\u202f\u202f\u202f\u202f"attachments":\u202f[ \n\n\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f{ \n\n\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f"contentType":\u202f"application/vnd.microsoft.card.adaptive", \n\n\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f"content": <PASTE THE COPIED ADAPTIVE CARD JSON HERE> \n\n\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f}] \n\n}  \n')),(0,s.yg)("p",null,'We need to Paste the Adaptive Cards JSON in the pace of "content" above.\nyour Entire Json Body will look like below after that\n',(0,s.yg)("img",{alt:"image",src:n(1239).A}),"\nHere is the Sample Json Body we are going to implement.\nPaste below Json in Postman and Beautify it for better readability."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},'    "type": "message",\n    "attachments": [\n        {\n            "contentType": "application/vnd.microsoft.card.adaptive",\n            "content": {\n                "type": "AdaptiveCard",\n                "body": [\n                    {\n                        "type": "Container",\n                        "style": "emphasis",\n                        "text": "Test",\n                        "items": [\n                            {\n                                "type": "ColumnSet",\n                                "columns": [\n                                    {\n                                        "type": "Column",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "size": "Large",\n                                                "weight": "Bolder",\n                                                "text": "**Automation Test Results**",\n                                                "wrap": true,\n                                                "style": "heading"\n                                            }\n                                        ],\n                                        "width": "stretch"\n                                    },\n                                    {\n                                        "type": "Column",\n                                        "items": [\n                                            {\n                                                "type": "Image",\n                                                "url": "https://upload.wikimedia.org/wikipedia/en/thumb/e/ea/Kongsberg_Gruppen_logo.svg/1200px-Kongsberg_Gruppen_logo.svg.png",\n                                                "altText": "Failed",\n                                                "height": "50px"\n                                            }\n                                        ],\n                                        "width": "auto"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        "type": "FactSet",\n                        "spacing": "Large",\n                        "facts": [\n                            {\n                                "title": "Submitted By",\n                                "value": "**Srinivasulu Ullaganti**"\n                            },\n                            {\n                                "title": "OS",\n                                "value": "**Windows**"\n                            },\n                            {\n                                "title": "Run Date",\n                                "value": "**abc**"\n                            },\n                            {\n                                "title": "Total Run Time",\n                                "value": "**asd**"\n                            }\n                        ]\n                    },\n                    {\n                        "type": "Container",\n                        "items": [\n                            {\n                                "type": "ColumnSet",\n                                "columns": [\n                                    {\n                                        "type": "Column",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "text": "TC ID",\n                                                "weight": "Bolder",\n                                                "wrap": true\n                                            }\n                                        ],\n                                        "width": "auto"\n                                    },\n                                    {\n                                        "type": "Column",\n                                        "spacing": "Medium",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "text": "Test Case Name",\n                                                "weight": "Bolder",\n                                                "wrap": true\n                                            }\n                                        ],\n                                        "width": "stretch"\n                                    },\n                                    {\n                                        "type": "Column",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "text": "Error",\n                                                "weight": "Bolder",\n                                                "color": "attention",\n                                                "wrap": true\n                                            }\n                                        ],\n                                        "width": "auto"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        "type": "Container",\n                        "items": [\n                            {\n                                "type": "ColumnSet",\n                                "columns": [\n                                    {\n                                        "type": "Column",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "text": "[14567](https://adaptivecards.io)",\n                                                "wrap": true\n                                            }\n                                        ],\n                                        "width": "auto"\n                                    },\n                                    {\n                                        "type": "Column",\n                                        "spacing": "Medium",\n                                        "items": [\n                                            {\n                                                "type": "TextBlock",\n                                                "text": "DuckDuck Go Login",\n                                                "wrap": true\n                                            }\n                                        ],\n                                        "width": "stretch"\n                                    },\n                                    {\n                                        "type": "Column",\n                                        "spacing": "Small",\n                                        "selectAction": {\n                                            "type": "Action.ToggleVisibility",\n                                            "targetElements": [\n                                                "ExceptionDetails",\n                                                "chevronDown1",\n                                                "chevronUp1"\n                                            ]\n                                        },\n                                        "verticalContentAlignment": "Center",\n                                        "items": [\n                                            {\n                                                "type": "Image",\n                                                "id": "chevronDown1",\n                                                "url": "https://adaptivecards.io/content/down.png",\n                                                "width": "20px",\n                                                "altText": "desc 12 collapsed"\n                                            },\n                                            {\n                                                "type": "Image",\n                                                "id": "chevronUp1",\n                                                "url": "https://adaptivecards.io/content/up.png",\n                                                "width": "20px",\n                                                "altText": "description total expanded",\n                                                "isVisible": false\n                                            }\n                                        ],\n                                        "width": "auto"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        "type": "Container",\n                        "id": "ExceptionDetails",\n                        "isVisible": false,\n                        "items": [\n                            {\n                                "type": "Container",\n                                "items": [\n                                    {\n                                        "type": "TextBlock",\n                                        "text": "* TestCase Error*",\n                                        "isSubtle": true,\n                                        "wrap": true\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        "type": "Container",\n                        "items": [\n                            {\n                                "type": "ActionSet",\n                                "actions": [\n                                    {\n                                        "type": "Action.OpenUrl",\n                                        "title": "View Test Results",\n                                        "url": "https://adaptivecards.io",\n                                        "style": "destructive"\n                                    },\n                                    {\n                                        "type": "Action.OpenUrl",\n                                        "title": "Raise Bug",\n                                        "url": "https://adaptivecards.io",\n                                        "style": "destructive"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,s.yg)("p",null,"Now Create a POJO Class for above Json Body like below."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},"package listeners.MicrosoftTeams\n\nimport com.fasterxml.jackson.annotation.JsonInclude;\nimport lombok.Builder;\nimport lombok.Data;\n\nimport java.util.List;\n\n@Data\n@Builder\n@JsonInclude(JsonInclude.Include.NON_NULL)\npublic class AdaptiveCardReqBody{\n   private List<AttachmentsItem> attachments;\n   private String type;\n\n   @Data\n   @Builder\n   public static class ActionsItem{\n      private String style;\n      private String type;\n      private String title;\n      private String url;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class AttachmentsItem{\n      private String contentType;\n      private Content content;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class BodyItem{\n      private String type;\n      private List<ItemsItem> items;\n      private String id;\n      private boolean isVisible;\n      private String spacing;\n      private List<FactsItem> facts;\n      private String style;\n      private String text;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public  static class ColumnsItem{\n      private String width;\n      private String type;\n      private List<ItemsItem> items;\n      private String spacing;\n      private String verticalContentAlignment;\n      private SelectAction selectAction;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class Content{\n      private String type;\n      private List<BodyItem> body;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class FactsItem{\n      private String title;\n      private String value;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class ItemsItem{\n      private List<ColumnsItem> columns;\n      private String type;\n      private String size;\n      private String weight;\n      private String style;\n      private String text;\n      private boolean wrap;\n      private String altText;\n      private String url;\n      private String height;\n      private String color;\n      private String width;\n      private String id;\n      private boolean isVisible;\n      private List<ItemsItem> items;\n      private String data;\n      private boolean isSubtle;\n      private List<ActionsItem> actions;\n   }\n\n   @Data\n   @Builder\n   @JsonInclude(JsonInclude.Include.NON_NULL)\n   public static class SelectAction{\n      private List<String> targetElements;\n      private String type;\n   }\n};\n")),(0,s.yg)("p",null,"Now Implement the Builder Class to Add Data"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},'package listeners.MicrosoftTeams\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static listeners.MicrosoftTeams.AdaptiveCardReqBody.*;\n\npublic class Builder {\n\n    List<ItemsItem> TestCaseName;\n    List<ItemsItem> TestCaseID;\n    List<ItemsItem> TestResult;\n\n    public Builder(List<ItemsItem> testCaseName, List<ItemsItem> testCaseID, List<ItemsItem> testResult) {\n        TestCaseName = testCaseName;\n        TestCaseID=testCaseID;\n        TestResult=testResult;\n\n    }\n\n    public AdaptiveCardReqBody reqBody(){\n        return builder()\n                .type("message")\n                .attachments(Arrays.asList(attachments()))\n                .build();\n    }\n\n    public AttachmentsItem attachments(){\n\n        return  AttachmentsItem.builder()\n                .content(content())\n                .contentType("application/vnd.microsoft.card.adaptive").build();\n\n    }\n\n    public Content content(){\n        return Content.builder()\n                .type("AdaptiveCard")\n                .body(Arrays.asList(banner(),factSetBody(),headings(),testcases(), buttons()))\n                .build();\n    }\n\n    public BodyItem banner(){\n\n        ItemsItem itemsItem1 = ItemsItem.builder()\n                .type("TextBlock")\n                .size("Large")\n                .weight("Bolder")\n                .text("**Automation Test Results**")\n                .wrap(true)\n                .style("heading")\n                .build();\n\n        ItemsItem itemsItem2 = ItemsItem.builder()\n                .type("Image")\n                .url("https://upload.wikimedia.org/wikipedia/en/thumb/e/ea/Kongsberg_Gruppen_logo.svg/1200px-Kongsberg_Gruppen_logo.svg.png")\n                .altText("Failed")\n                .height("50px")\n                .build();\n\n        ColumnsItem columnsItem1 = ColumnsItem.builder()\n                .type("Column")\n                .width("stretch")\n                .items(Arrays.asList(itemsItem1)).build();\n\n        ColumnsItem columnsItem2 = ColumnsItem.builder()\n                .type("Column")\n                .width("stretch")\n                .items(Arrays.asList(itemsItem2)).build();\n\n\n\n        ItemsItem itemsItem = ItemsItem.builder()\n                .type("ColumnSet")\n                .columns(Arrays.asList(columnsItem1,columnsItem2)).build();\n\n       return  BodyItem.builder()\n                .type("Container")\n                .style("emphasis")\n                .text("Test")\n                .items(Arrays.asList(itemsItem))\n                .build();\n\n\n    }\n\n    public BodyItem factSetBody(){\n\n        FactsItem fact1 = FactsItem\n                .builder()\n                .title("Submitted By")\n                .value( "**Srinivasulu Ullaganti**").build();\n\n        FactsItem fact2 = FactsItem\n                .builder()\n                .title("OS")\n                .value("**Windows**").build();\n\n        FactsItem fact3 = FactsItem\n                .builder()\n                .title("Run Date")\n                .value("**abc**").build();\n\n        FactsItem fact4 = FactsItem\n                .builder()\n                .title("Total Run Time")\n                .value("**10 Min**").build();\n\n        return  BodyItem.builder()\n                .type("FactSet")\n                .spacing("Large")\n                .facts(Arrays.asList(fact1,fact2,fact3,fact4))\n                .build();\n    }\n\n    public BodyItem headings(){\n        ItemsItem itemsItem1 = ItemsItem.builder()\n                .type("TextBlock")\n                .text("TC ID")\n                .weight("Bolder")\n                .wrap(true)\n                .build();\n\n        ItemsItem itemsItem2 = ItemsItem.builder()\n                .type("TextBlock")\n                .text("TestCase Name")\n                .weight("Bolder")\n                .wrap(true)\n                .build();\n\n        ItemsItem itemsItem3 = ItemsItem.builder()\n                .type("TextBlock")\n                .text("Result")\n                .weight("Bolder")\n                .color("dark")\n                .wrap(true)\n                .build();\n\n        ColumnsItem columnsItem1 = ColumnsItem.builder()\n                .type("Column")\n                .items(Arrays.asList(itemsItem1))\n                .width("auto").build();\n\n        ColumnsItem columnsItem2 = ColumnsItem.builder()\n                .type("Column")\n                .spacing("medium")\n                .items(Arrays.asList(itemsItem2))\n                .width("stretch").build();\n\n        ColumnsItem columnsItem3 = ColumnsItem.builder()\n                .type("Column")\n                .items(Arrays.asList(itemsItem3))\n                .width("auto").build();\n\n        ItemsItem itemsItem = ItemsItem.builder()\n                .type("ColumnSet")\n                .columns(Arrays.asList(columnsItem1,columnsItem2,columnsItem3))\n                .build();\n\n        return  BodyItem.builder()\n                .type("Container")\n                .items(Arrays.asList(itemsItem))\n                .build();\n    }\n\n    public BodyItem testcases(){\n\n/*        ItemsItem testCaseID = ItemsItem.builder()\n                .type("TextBlock")\n                .text("[14567](https://adaptivecards.io)")\n                .weight("Bolder")\n                .wrap(true)\n                .build();*/\n\n/*        ItemsItem testCaseName = ItemsItem.builder()\n                .type("TextBlock")\n                .text("TestCase Description")\n                .weight("Bolder")\n                .wrap(true)\n                .build();*/\n/*\n\n        ItemsItem itemsItemcol3 = ItemsItem.builder()\n                .type("TextBlock")\n                .text("Failed")\n                .weight("Bolder")\n                .color("attention")\n                .wrap(true)\n                .build();\n*/\n\n\n        ColumnsItem columnsItem1 = ColumnsItem.builder()\n                .type("Column")\n                .items(TestCaseID)\n                .width("auto").build();\n\n        ColumnsItem columnsItem2 = ColumnsItem.builder()\n                .type("Column")\n                .spacing("medium")\n                .items(TestCaseName)\n                .width("stretch").build();\n\n        ColumnsItem columnsItem33 = ColumnsItem.builder()\n                .type("Column")\n                .spacing("medium")\n                .items(TestResult)\n                .width("auto").build();\n\n\n        ItemsItem itemsItem = ItemsItem.builder()\n                .type("ColumnSet").columns(Arrays.asList(columnsItem1,columnsItem2,columnsItem33)).build();\n\n        return BodyItem.builder().type("Container")\n                .items(Arrays.asList(itemsItem)).build();\n    }\n\n    public BodyItem errorDetails(){\n\n        ItemsItem itemsItem1 = ItemsItem.builder()\n                .type("TextBlock")\n                .text("Error Details")\n                .isSubtle(true)\n                .wrap(true)\n                .build();\nItemsItem itemsItem2 = ItemsItem.builder()\n        .type("Container").items(Arrays.asList(itemsItem1)).build();\n\n        return  BodyItem.builder()\n                .type("Container")\n                .id("ExceptionDetails")\n                .isVisible(false)\n                .items(Arrays.asList(itemsItem2))\n                .build();\n    }\n\n    public BodyItem buttons(){\n        ActionsItem actionsItem1 = ActionsItem.builder()\n                .title("View Test Results")\n                .type("Action.OpenUrl")\n                .url("https://adaptivecards.io")\n                .style("destructive")\n                .build();\n\n        ActionsItem actionsItem2 = ActionsItem.builder()\n                .title("Raise Bug")\n                .type("Action.OpenUrl")\n                .url("https://adaptivecards.io")\n                .style("destructive")\n                .build();\n\n        ItemsItem itemsItem = ItemsItem.builder()\n                .type("ActionSet")\n                .actions(Arrays.asList(actionsItem1,actionsItem2)).build();\n\n        return  BodyItem.builder()\n                .type("Container")\n                //.isVisible(false)\n                .items(Arrays.asList(itemsItem))\n                .build();\n    }\n\n\n    public void arrows(){\n        ////Column3\n        SelectAction selectAction = SelectAction.builder().type("Action.ToggleVisibility")\n                .targetElements(Arrays.asList("ExceptionDetails", "chevronDown1", "chevronUp1")).build();\n\n        ItemsItem itemsItem3 = ItemsItem.builder()\n                .type("Image")\n                .id("chevronDown1")\n                .url("https://adaptivecards.io/content/down.png")\n                .width("20px")\n                .altText("desc 12 collapsed").build();\n\n        ItemsItem itemsItem4 = ItemsItem.builder()\n                .type("Image")\n                .id("chevronUp1")\n                .url("https://adaptivecards.io/content/up.png")\n                .width("20px")\n                .isVisible(false)\n                .altText("description total expanded").build();\n\n        ColumnsItem columnsItem3 = ColumnsItem.builder()\n                .type("Column")\n                .spacing("Small")\n                .selectAction(selectAction)\n                .verticalContentAlignment("Center")\n                .items(Arrays.asList(itemsItem3,itemsItem4))\n                .width("auto").build();\n\n    }\n}\n\n')),(0,s.yg)("p",null,"At Last Listener Class to send Results on Finish."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},'package listeners.MicrosoftTeams\n\nimport io.restassured.RestAssured;\nimport org.testng.ISuite;\nimport org.testng.ISuiteListener;\nimport org.testng.ITestListener;\nimport org.testng.ITestResult;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static listeners.MicrosoftTeams.AdaptiveCardReqBody.*;\n\npublic class Listener implements ITestListener, ISuiteListener{\n\n    List<ItemsItem> TestCaseID = new ArrayList<>();\n    List<ItemsItem> TestCaseName = new ArrayList<>();\n    List<ItemsItem> TestResult = new ArrayList<>();\n\n    @Override\n    public void onTestStart(ITestResult result) {\n        TestCaseName.add(ItemsItem.builder()\n                .type("TextBlock")\n                .text(result.getMethod().getMethodName())\n                .weight("Bolder")\n                .wrap(true)\n                .build());\n\n\n        TestCaseID.add(ItemsItem.builder()\n                .type("TextBlock")\n                .text("[14567](https://adaptivecards.io)")\n                .weight("Bolder")\n                .wrap(true)\n                .build());\n    }\n\n    @Override\n    public void onTestSuccess(ITestResult result) {\n\n\n\n\n        TestResult.add(ItemsItem.builder()\n                .type("TextBlock")\n                .text("PASS")\n                .weight("Bolder")\n                .color("good")\n                .wrap(true)\n                .build());\n    }\n\n    @Override\n    public void onTestFailure(ITestResult result) {\n\n\n        TestResult.add(ItemsItem.builder()\n                .type("TextBlock")\n                .text("FAIL")\n                .weight("Bolder")\n                .color("attention")\n                .wrap(true)\n                .build());\n    }\n\n    @Override\n    public void onFinish(ISuite suite) {\n\n        Builder builder = new Builder(TestCaseName,TestCaseID,TestResult);\n\n        RestAssured.baseURI="YOUR WEBHOOK URL";\n        RestAssured.given().log().body()\n                .body(builder.reqBody())\n                .when()\n                .post()\n                .then().log().body()\n                .statusCode(200);\n    }\n\n}\n')),(0,s.yg)("p",null,"Now add the Above TestNG Listener in your TestNG XML File and Run the testcases"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-java"},'<listeners>\n\n <listener class-name="listeners.MicrosoftTeams.Listener"></listener>\n\n</listeners>\n\n')),(0,s.yg)("p",null,"After the Execution you will see your Test Results like below."),(0,s.yg)("p",null,(0,s.yg)("img",{alt:"image",src:n(5454).A})),(0,s.yg)("p",null,"Note: AdaptiveCards.io is highly customizable as per our Needs, if you are a RestAssured or Pojo Expert I would like to work on Enhancing the above card with more features.\nEnjoy..."))}p.isMDXComponent=!0}}]);